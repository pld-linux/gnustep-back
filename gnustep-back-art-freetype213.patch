--- gnustep-back-0.8.5/Source/art/ftfont.m.orig	2003-02-10 18:46:06.000000000 +0100
+++ gnustep-back-0.8.5/Source/art/ftfont.m	2003-05-14 21:46:52.000000000 +0200
@@ -79,9 +79,9 @@
 @interface FTFontInfo : GSFontInfo <FTFontInfo>
 {
 @public
-  FTC_ImageDesc imgd;
+  FTC_ImageTypeRec imgd;
 
-  FTC_ImageDesc fallback;
+  FTC_ImageTypeRec fallback;
 
   FTFaceInfo *face_info;
 
@@ -743,7 +743,7 @@
   int use_sbit;
 
   FTC_SBit sbit;
-  FTC_ImageDesc cur;
+  FTC_ImageTypeRec cur;
 
   FT_Matrix ftmatrix;
   FT_Vector ftdelta;
@@ -793,23 +793,23 @@
 	    int rh = face_info->render_hints_hack;
 	    if (rh & 0x10000)
 	      {
-		cur.type = ftc_image_grays;
+		cur.flags = FT_LOAD_DEFAULT;
 		rh = (rh >> 8) & 0xff;
 	      }
 	    else
 	      {
-		cur.type = ftc_image_mono;
+		cur.flags = FT_LOAD_MONOCHROME;
 		rh = rh & 0xff;
 	      }
 	    if (rh & 1)
-	      cur.type |= ftc_image_flag_autohinted;
+	      cur.flags |= FT_LOAD_FORCE_AUTOHINT;
 	    if (!(rh & 2))
-	      cur.type |= ftc_image_flag_unhinted;
+	      cur.flags |= FT_LOAD_NO_HINTING;
 	  }
 	else if (xx < 8)
-	  cur.type = ftc_image_grays | ftc_image_flag_unhinted;
+	  cur.flags = FT_LOAD_DEFAULT | FT_LOAD_NO_HINTING;
 	else
-	  cur.type = ftc_image_grays;
+	  cur.flags = FT_LOAD_DEFAULT;
       }
     else
       {
@@ -1135,7 +1135,7 @@
   int use_sbit;
 
   FTC_SBit sbit;
-  FTC_ImageDesc cur;
+  FTC_ImageTypeRec cur;
 
   FT_Matrix ftmatrix;
   FT_Vector ftdelta;
@@ -1185,23 +1185,23 @@
 	    int rh = face_info->render_hints_hack;
 	    if (rh & 0x10000)
 	      {
-		cur.type = ftc_image_grays;
+		cur.flags = FT_LOAD_DEFAULT;
 		rh = (rh >> 8) & 0xff;
 	      }
 	    else
 	      {
-		cur.type = ftc_image_mono;
+		cur.flags = FT_LOAD_MONOCHROME;
 		rh = rh & 0xff;
 	      }
 	    if (rh & 1)
-	      cur.type |= ftc_image_flag_autohinted;
+	      cur.flags |= FT_LOAD_FORCE_AUTOHINT;
 	    if (!(rh & 2))
-	      cur.type |= ftc_image_flag_unhinted;
+	      cur.flags |= FT_LOAD_NO_HINTING;
 	  }
 	else if (xx < 8)
-	  cur.type = ftc_image_grays | ftc_image_flag_unhinted;
+	  cur.flags = FT_LOAD_DEFAULT | FT_LOAD_NO_HINTING;
 	else
-	  cur.type = ftc_image_grays;
+	  cur.flags = FT_LOAD_DEFAULT;
       }
     else
       {
@@ -1466,7 +1466,7 @@
       /* TODO: try to more efficiently? */
       /* TODO: set up all this stuff in -init... for the raw metric case */
       float xx, yy;
-      FTC_ImageDesc cur;
+      FTC_ImageTypeRec cur;
       FTC_SBit sbit;
 
       cur = imgd;
@@ -1479,23 +1479,23 @@
 	    int rh = face_info->render_hints_hack;
 	    if (rh & 0x10000)
 	      {
-		cur.type = ftc_image_grays;
+		cur.flags = FT_LOAD_DEFAULT;
 		rh = (rh >> 8) & 0xff;
 	      }
 	    else
 	      {
-		cur.type = ftc_image_mono;
+		cur.flags = FT_LOAD_MONOCHROME;
 		rh = rh & 0xff;
 	      }
 	    if (rh & 1)
-	      cur.type |= ftc_image_flag_autohinted;
+	      cur.flags |= FT_LOAD_FORCE_AUTOHINT;
 	    if (!(rh & 2))
-	      cur.type |= ftc_image_flag_unhinted;
+	      cur.flags |= FT_LOAD_NO_HINTING;
 	  }
 	else if (xx < 8)
-	  cur.type = ftc_image_grays | ftc_image_flag_unhinted;
+	  cur.flags = FT_LOAD_DEFAULT | FT_LOAD_NO_HINTING;
 	else
-	  cur.type = ftc_image_grays;
+	  cur.flags = FT_LOAD_DEFAULT;
 
       if (FTC_SBitCache_Lookup(ftc_sbitcache, &cur, glyph, &sbit, NULL))
 	return NSZeroSize;
@@ -1547,7 +1547,7 @@
 
 - (NSRect) boundingRectForGlyph: (NSGlyph)glyph
 {
-  FTC_ImageDesc *cur;
+  FTC_ImageTypeRec *cur;
   FT_BBox bbox;
   FT_Glyph g;
 
@@ -1618,7 +1618,7 @@
 
   FTC_SBit sbit;
 
-  FTC_ImageDesc *cur;
+  FTC_ImageTypeRec *cur;
 
 
   cmap.face_id = imgd.font.face_id;
@@ -1831,7 +1831,7 @@
   unichar *uch;
   int ulen;
 
-  FTC_ImageDesc cur;
+  FTC_ImageTypeRec cur;
 
 
   FT_Matrix ftmatrix;
@@ -2003,7 +2003,7 @@
   int use_sbit;
 
   FTC_SBit sbit;
-  FTC_ImageDesc cur;
+  FTC_ImageTypeRec cur;
 
   FT_Matrix ftmatrix;
   FT_Vector ftdelta;
@@ -2050,10 +2050,10 @@
 
 /*	if (cur.font.pix_width < 16 && cur.font.pix_height < 16 &&
 	    cur.font.pix_width > 6 && cur.font.pix_height > 6)
-	  cur.type = ftc_image_mono;
+	  cur.flags = FT_LOAD_MONOCHROME;
 	else*/
-	  cur.type = ftc_image_grays, subpixel = YES, cur.font.pix_width *= 3, x *= 3;
-//			imgd.type|=|ftc_image_flag_unhinted; /* TODO? when? */
+	  cur.flags = FT_LOAD_DEFAULT, subpixel = YES, cur.font.pix_width *= 3, x *= 3;
+//			imgd.flags|=|FT_LOAD_NO_HINTING; /* TODO? when? */
       }
     else
       {
